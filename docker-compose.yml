# Automatise le lancement de l'infrastructure micro-services

version: '3.8'

# Define services
services:
  # DB du micro service de gestion des utilisateurs
  user-mysql:
    image: mysql:oracle
    restart: always
    container_name: user-mysql
    environment:
      MYSQL_DATABASE: user-bd
      MYSQL_ROOT_PASSWORD: root
    networks:
      - backusers
    healthcheck:
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD']
      timeout: 20s
      retries: 5
  # Micro-service de gestion des utilisateurs
  user-service:
    build:
      context: users-service
      dockerfile: Dockerfile
    image: user-service:7.0
    restart: "no" 
    ports: # Ouverture des ports pour dev ONLY
      - "10000:10000"
    container_name: user-service
    depends_on: 
      user-mysql:
        condition: service_healthy
    networks: 
      - backusers
      - backend
    environment:
      WAIT_HOSTS: user-mysql:3306
  # Micro-service composite de gestion des utilisateurs avec cours
  user-class-service:
    build:
      context: userscours # Répertoire (dans répertoire courant) contenant le dockerfile
      dockerfile: Dockerfile
    image: user-class-service:7.0
    restart: "no"
    ports: # Ouverture des ports pour dev ONLY
      - "30000:30000"
    container_name: user-class-service
    depends_on: 
      - user-service
    networks: 
      - backend
    environment:
      WAIT_HOSTS: user-service:10000
# Networks to be created to facilitate communication between containers
networks:
  backusers:
  backend:

